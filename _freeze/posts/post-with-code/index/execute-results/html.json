{
  "hash": "f0e1ffcbeca4acf90a1aebbd1a25bbc3",
  "result": {
    "markdown": "---\ntitle: \"Estimando MCO 'manualmente' en R\"\nauthor: \"Diego Hermoza\"\ndate: \"2022-12-24\"\ncategories: [econometrics, R]\nimage: \"image.jpg\"\ndraft: true\n---\n\n\nEl método más común para la estimación del modelo de regresión lineal es el de mínimos cuadrados. En esta entrada muestro como construir el estimador de mínimos cuadrados ordinarios paso a paso en R. En realidad, dados los supuestos del modelo clásico de regresión lineal, es un procedimiento bastante sencillo. La fórmula para estimar los parámetros es: $\\hat{\\beta} = {(X^{\\prime}X)}^{-1}X^{\\prime}y$, donde $X$ contiene las $n$ observaciones de las $k$ variables independientes, y $y$ a las $n$ observaciones de la variable dependiente. Pero... ¿de dónde sale está formula?\n\nConsideremos el siguiente modelo de regresión:\n\n$$y_i = \\beta_0 + \\beta_1x_{1i}  + ... + \\beta_kx_{ki} + u_i,   i = 1,...,n $$\n\nde manera matricial:\n\n$$y = X\\beta + u$$\n\n$$\\hat{y} = X\\hat{\\beta}$$ $$u = y - \\hat{y} = y - X\\hat{\\beta}$$\n\nEl problema de minimización consiste en elegir un vector de coeficientes (supongamos) $b$ tal que la suma de cuadrados de los residuales $u_i$ sea el mínimo. De manera matricial:\n\n$$u'u =  (y - Xb)'(y - Xb)$$ $$u'u =  y'y - b'X'y - y'Xb + b'X'Xb$$\n\n$$u'u =  y'y - 2b'X'y - y'Xb + b'X'Xb$$\n\n\n\n```{.r .cell-code}\n# establecemos los parametros a estimar\nset.seed(1)\nN <- 100\nb0 <- 2 \nb1 <- 3 \nb2 <- 5\n\n# simulamos datos\nx1 <- runif(N) \nx2 <- runif(N) \nu <- rnorm(N) \n\n# generamos y\ny <- b0 + b1*x1 + b2*x2 + u\n\n#m1 <- lm(y ~ x1 + x2) #regresión\n#summary(m1)\n\n# definir la matrix X (variables explicativas)\nX <- as.matrix(cbind(1, x1, x2)) #aumentando un vector de unos\n\n#Estimacion de b = ( (X'X)^(-1) )X'y\n\n# solve() --> genera la inversa de la matriz\n# t()  --> genera la transpuesta de la matriz\n# %*%  --> simbolo para multiplicar matrices\n\nb <- solve( t(X) %*% X) %*% t(X) %*% y\n\n# calcular los residuales / errores e = y-Xb\ne <- y - X %*% b\ncolSums(e) #practicamente 0\n```\n\n[1] 2.926548e-13\n\n```{.r .cell-code}\n# numero de observaciones (n) y parametros (k)\nn <- nrow(X);    k <- ncol(X)\n\n# calcular la matriz de varianzas y covarianzas cov = ( 1/(n-k) )e'e(X'X)^(-1)\n#  estimar la varianza de los errores: sigma^2 : s\n# s = ( 1/(n-k) )e'e\ns <- 1/(n-k) * as.numeric(t(e)%*%e) #as.numeric para que sea un valor\n\n#  multiplicar por (X'X)^(-1)\ncov <- s*solve( t(X) %*% X)\n\n# desviaciones estandar de los coeficientes. se = raiz de las diagonales de cov\nse <- sqrt(diag(cov))\n\n# estadisticos t\nt <- (b/se)\n\n# p_value del estadistico t\np_val <- 2*pt(-abs(t), df = n-k-1)\n\n#Tabla de la regresion\ntabla <- as.data.frame(round(cbind(b, se, t, p_val), 4))\ntabla <- setNames(tabla, c(\"coef\", \"se\", \"t\", \"pval\"))\nknitr::kable(tabla)\n```\n\n::: {.cell-output-display}\n|   |   coef|     se|       t| pval|\n|:--|------:|------:|-------:|----:|\n|   | 1.9906| 0.2791|  7.1333|    0|\n|x1 | 2.9307| 0.3634|  8.0637|    0|\n|x2 | 5.0144| 0.3578| 14.0148|    0|\n:::\n\n```{.r .cell-code}\n#con función de R (lm)\nm1 <- lm(y~x1+x2)\ntexreg::htmlreg(m1)\n```\n\n<table class=\"texreg\" style=\"margin: 10px auto;border-collapse: collapse;border-spacing: 0px;caption-side: bottom;color: #000000;border-top: 2px solid #000000;\">\n<caption>Statistical models</caption>\n<thead>\n<tr>\n<th style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 1</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">(Intercept)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1.99<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.28)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">x1</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">2.93<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.36)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">x2</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">5.01<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.36)</td>\n</tr>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.73</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Adj. R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.73</td>\n</tr>\n<tr style=\"border-bottom: 2px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">Num. obs.</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">100</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"font-size: 0.8em;\" colspan=\"2\"><sup>&#42;&#42;&#42;</sup>p &lt; 0.001; <sup>&#42;&#42;</sup>p &lt; 0.01; <sup>&#42;</sup>p &lt; 0.05</td>\n</tr>\n</tfoot>\n</table>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}